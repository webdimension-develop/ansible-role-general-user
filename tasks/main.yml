---
# tasks file for src/roles/general_user
- name: Group control
  become: true
  group:
    name: "{{ item.key }}"
    state: "{{ item.value.state }}"
  with_dict: "{{ user_groups }}"
  when: user_groups is defined

- name: Debug
  debug:
    msg: "{{ general_users }}"

- name: User-control
  become: true
  user:
    name: "{{ item.value.name }}"
    groups: "{{ item.value.groups }}"
    group: "{{ item.value.group }}"
    state: "{{ item.value.state }}"
    remove: "{{ item.value.remove }}"
    create_home: "{{ item.value.create_home }}"
    password: "{{ item.value.password }}"
    shell: "{{ item.value.login_shell }}"
    comment: "{{ item.value.comment }}"
    expires: "{{ item.value.expires }}"
# changed_when: False
  with_dict: "{{ general_users }}"
  when: general_users is defined

- name: Set public-key
  become: true
  ansible.posix.authorized_key:
    user: "{{ item.value.name }}"
    state: "{{ item.value.state }}"
    key: "{{ lookup('file', '{{ item.value.public_key }}') }}"
  with_dict: "{{ general_users }}"
  when: general_users is defined

- name: Set secret-key
  become: true
  copy:
    content: "{{ lookup('file', '{{ item.value.secret_key }}') }}"
    dest: "/home/{{ item.value.name }}/.ssh/id_rsa"
    owner: "{{ item.value.name }}"
    group: "{{ item.value.group }}"
    mode: '600'
  with_dict: "{{ general_users }}"
  when:
    - general_users is defined
    - item.value.secret_key is defined
    - item.value.create_home == 'yes'

- name: Add sudo authorize
  become: true
  lineinfile:
    dest: /etc/sudoers
    backup: true
    line: "{{ item.value.name }} ALL=(ALL) NOPASSWD: ALL"
  when:
    - general_users is defined
    - item.value.sudo == 'present'
  with_dict: "{{ general_users }}"
